<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Notas', 'doctrine');

/**
 * BaseNotas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $periodo
 * @property string $pasaporte
 * @property string $codigo_carrera
 * @property string $unidad_curricular
 * @property string $seccion
 * @property string $nota
 * @property string $cedula
 * @property integer $pnf_id
 * @property integer $estudiante_id
 * @property string $codigo2
 * @property integer $unidad_curricular_id
 * @property integer $id
 * @property UnidadCurricular $UnidadCurricular
 * @property Pnf $Pnf
 * @property Estudiante $Estudiante
 * 
 * @method string           getPeriodo()              Returns the current record's "periodo" value
 * @method string           getPasaporte()            Returns the current record's "pasaporte" value
 * @method string           getCodigoCarrera()        Returns the current record's "codigo_carrera" value
 * @method string           getUnidadCurricular()     Returns the current record's "unidad_curricular" value
 * @method string           getSeccion()              Returns the current record's "seccion" value
 * @method string           getNota()                 Returns the current record's "nota" value
 * @method string           getCedula()               Returns the current record's "cedula" value
 * @method integer          getPnfId()                Returns the current record's "pnf_id" value
 * @method integer          getEstudianteId()         Returns the current record's "estudiante_id" value
 * @method string           getCodigo2()              Returns the current record's "codigo2" value
 * @method integer          getUnidadCurricularId()   Returns the current record's "unidad_curricular_id" value
 * @method integer          getId()                   Returns the current record's "id" value
 * @method UnidadCurricular getUnidadCurricular()     Returns the current record's "UnidadCurricular" value
 * @method Pnf              getPnf()                  Returns the current record's "Pnf" value
 * @method Estudiante       getEstudiante()           Returns the current record's "Estudiante" value
 * @method Notas            setPeriodo()              Sets the current record's "periodo" value
 * @method Notas            setPasaporte()            Sets the current record's "pasaporte" value
 * @method Notas            setCodigoCarrera()        Sets the current record's "codigo_carrera" value
 * @method Notas            setUnidadCurricular()     Sets the current record's "unidad_curricular" value
 * @method Notas            setSeccion()              Sets the current record's "seccion" value
 * @method Notas            setNota()                 Sets the current record's "nota" value
 * @method Notas            setCedula()               Sets the current record's "cedula" value
 * @method Notas            setPnfId()                Sets the current record's "pnf_id" value
 * @method Notas            setEstudianteId()         Sets the current record's "estudiante_id" value
 * @method Notas            setCodigo2()              Sets the current record's "codigo2" value
 * @method Notas            setUnidadCurricularId()   Sets the current record's "unidad_curricular_id" value
 * @method Notas            setId()                   Sets the current record's "id" value
 * @method Notas            setUnidadCurricular()     Sets the current record's "UnidadCurricular" value
 * @method Notas            setPnf()                  Sets the current record's "Pnf" value
 * @method Notas            setEstudiante()           Sets the current record's "Estudiante" value
 * 
 * @package    ucs_control
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notas');
        $this->hasColumn('periodo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pasaporte', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('codigo_carrera', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('unidad_curricular', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('seccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('nota', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('cedula', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pnf_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('estudiante_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('unidad_curricular_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'notas3_id',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UnidadCurricular', array(
             'local' => 'unidad_curricular_id',
             'foreign' => 'id'));

        $this->hasOne('Pnf', array(
             'local' => 'pnf_id',
             'foreign' => 'id'));

        $this->hasOne('Estudiante', array(
             'local' => 'estudiante_id',
             'foreign' => 'id'));
    }
}